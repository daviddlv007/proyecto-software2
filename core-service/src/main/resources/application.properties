# ============================================
# CORE SERVICE - Application Properties
# Compatible con H2 (desarrollo) y PostgreSQL (Docker/Producci√≥n)
# ============================================

# Puerto del servidor
server.port=${SERVER_PORT:8080}

# ============================================
# DATASOURCE - Configurable via ENV
# ============================================
spring.datasource.url=${SPRING_DATASOURCE_URL:jdbc:h2:mem:testdb}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME:sa}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD:}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER:org.h2.Driver}

# Connection pool (optimizado para recursos limitados)
spring.datasource.hikari.maximum-pool-size=${DB_POOL_SIZE:5}
spring.datasource.hikari.minimum-idle=${DB_POOL_MIN_IDLE:2}
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# ============================================
# JPA / HIBERNATE
# ============================================
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:update}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.dialect=${HIBERNATE_DIALECT:org.hibernate.dialect.H2Dialect}

# Performance optimizations
spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.open-in-view=false

# ============================================
# GRAPHQL
# ============================================
spring.graphql.graphiql.enabled=${GRAPHIQL_ENABLED:true}
spring.graphql.path=/graphql
spring.graphql.graphiql.path=/graphiql

# ============================================
# H2 CONSOLE (solo para desarrollo local)
# ============================================
spring.h2.console.enabled=${H2_CONSOLE_ENABLED:true}
spring.h2.console.path=/h2-console

# ============================================
# ACTUATOR (Health checks para Docker)
# ============================================
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true

# ============================================
# LOGGING
# ============================================
logging.level.root=INFO
logging.level.com.proyecto=DEBUG
logging.level.org.hibernate.SQL=${SQL_LOG_LEVEL:WARN}
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} - %msg%n
